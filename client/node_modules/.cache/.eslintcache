[{"/home/akhil/Desktop/ecoverse/client/src/index.js":"1","/home/akhil/Desktop/ecoverse/client/src/reportWebVitals.js":"2","/home/akhil/Desktop/ecoverse/client/src/App.js":"3","/home/akhil/Desktop/ecoverse/client/src/components/Layout/Layout.js":"4","/home/akhil/Desktop/ecoverse/client/src/components/Layout/Header.js":"5","/home/akhil/Desktop/ecoverse/client/src/components/Layout/Footer.js":"6","/home/akhil/Desktop/ecoverse/client/src/pages/HomePage.js":"7","/home/akhil/Desktop/ecoverse/client/src/pages/AboutPage.js":"8","/home/akhil/Desktop/ecoverse/client/src/pages/DashboardPage.js":"9","/home/akhil/Desktop/ecoverse/client/src/pages/LoginPage.js":"10","/home/akhil/Desktop/ecoverse/client/src/pages/SignUpPage.js":"11","/home/akhil/Desktop/ecoverse/client/src/pages/PageNotFound.js":"12","/home/akhil/Desktop/ecoverse/client/src/pages/YourParticipations.js":"13","/home/akhil/Desktop/ecoverse/client/src/pages/HostAnEvent.js":"14","/home/akhil/Desktop/ecoverse/client/src/pages/EventDetails.js":"15","/home/akhil/Desktop/ecoverse/client/src/pages/OngoingEvents.js":"16","/home/akhil/Desktop/ecoverse/client/src/Context/auth.js":"17","/home/akhil/Desktop/ecoverse/client/src/pages/YourEvents.js":"18","/home/akhil/Desktop/ecoverse/client/src/pages/ParticipantsList.js":"19"},{"size":663,"mtime":1687800826430,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1687625623967,"results":"22","hashOfConfig":"21"},{"size":1560,"mtime":1688110347549,"results":"23","hashOfConfig":"21"},{"size":381,"mtime":1687788092950,"results":"24","hashOfConfig":"21"},{"size":3133,"mtime":1688110676331,"results":"25","hashOfConfig":"21"},{"size":286,"mtime":1688222580837,"results":"26","hashOfConfig":"21"},{"size":2935,"mtime":1688221760207,"results":"27","hashOfConfig":"21"},{"size":2694,"mtime":1688222354215,"results":"28","hashOfConfig":"21"},{"size":212,"mtime":1687674274315,"results":"29","hashOfConfig":"21"},{"size":2070,"mtime":1688229723925,"results":"30","hashOfConfig":"21"},{"size":2923,"mtime":1688229773452,"results":"31","hashOfConfig":"21"},{"size":208,"mtime":1687674884087,"results":"32","hashOfConfig":"21"},{"size":2221,"mtime":1688229793990,"results":"33","hashOfConfig":"21"},{"size":3557,"mtime":1688229713308,"results":"34","hashOfConfig":"21"},{"size":2413,"mtime":1688229735638,"results":"35","hashOfConfig":"21"},{"size":1963,"mtime":1688229749363,"results":"36","hashOfConfig":"21"},{"size":945,"mtime":1687856227910,"results":"37","hashOfConfig":"21"},{"size":2165,"mtime":1688229778357,"results":"38","hashOfConfig":"21"},{"size":1690,"mtime":1688229758671,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1j75iqy",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"/home/akhil/Desktop/ecoverse/client/src/index.js",[],[],[],"/home/akhil/Desktop/ecoverse/client/src/reportWebVitals.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/App.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/components/Layout/Layout.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/components/Layout/Header.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/components/Layout/Footer.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/HomePage.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/AboutPage.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/DashboardPage.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/LoginPage.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/SignUpPage.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/PageNotFound.js",[],[],"/home/akhil/Desktop/ecoverse/client/src/pages/YourParticipations.js",["105","106"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport { useAuth } from \"../Context/auth\";\n\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\nconst YourParticipations = () => {\n  const [events, setEvents] = useState([]);\n  const [auth, setAuth] = useAuth();\n  const getPEvents = async () => {\n    try {\n      const { data } = await axios.get(\n        \"http://localhost:8080/api/v1/auth/your-participations\",\n        {\n          headers: {\n            Authorization: auth?.token,\n          },\n        }\n      );\n      if (data?.success) {\n        setEvents(data?.events);\n      }\n    } catch (error) {\n    }\n  };\n\n  useEffect(() => {\n    getPEvents();\n  }, []);\n\n  const removeHandler = async (title) => {\n    try{\n      const {data} = await axios.delete(`http://localhost:8080/api/v1/event/remove-event/${title}`,        {\n        headers: {\n          Authorization: auth?.token,\n        },\n      })\n      if(data.success){\n        toast.success(\"Deleted successfully\");\n        getPEvents();\n      }\n    }catch(error){\n    }\n  }\n\n  return (\n    <>\n      <Layout>\n        <div className=\"your\">\n        <h1 id=\"yourpart\">Your participations</h1>\n        <div className=\"container\">\n        <div className=\"row\">\n        {events?.map((ev) => {\n          return (\n            <>\n              <div className=\"col-md-3\">\n                <div className=\"card\" style={{ width: \"18rem\"}}>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{ev.title}</h5>\n                    <p className=\"card-text\">{ev.description}</p>\n                    <p className=\"card-text\">{ev.place}</p>\n                    {<p>Date:{new Date(ev?.date).getFullYear()}-{new Date(ev?.date).getMonth()+1}-{new Date(ev?.date).getDate()}</p>}\n                    <p className=\"card-text\">Time:{ev.time}</p>\n                    <button className=\"btn btn-primary\" onClick={() => removeHandler(ev.title)}>Remove</button>\n                  </div>\n\n                </div>\n              </div>\n            </>\n          );\n        })}\n        </div>\n        </div>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default YourParticipations;\n","/home/akhil/Desktop/ecoverse/client/src/pages/HostAnEvent.js",["107","108","109"],[],"import React, { useEffect, useState } from 'react'\nimport Layout from '../components/Layout/Layout'\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../Context/auth';\nimport toast from 'react-hot-toast';\n\nconst HostAnEvent = () => {\n\n  const [title,setTitle] = useState(\"\");\n  const [description,setDescription] = useState(\"\");\n  const [place,setPlace] = useState(\"\");\n  const [date,setDate] = useState(\"\");\n  const [auth,setAuth] = useAuth();\n  const [time,setTime] = useState()\n  const navigate = useNavigate();\n\n  const handleSubmit = async(e) =>{\n    e.preventDefault();\n    let id = auth?.user?._id;\n    try {\n      const {data} = await axios.post(`http://localhost:8080/api/v1/event/create-event`,{title,description,place,date,time});\n      if (data?.success)\n      {\n        toast.success(\"Event created successfully\");\n        navigate(\"/\");\n      }\n    } catch (error) {\n    }\n  }\n\n  // const getAllUsers = async() =>{\n  //   try {\n  //     const {data} = await axios.get('http://localhost:8080/api/v1/auth/get-users');\n  //     if (data?.success)\n  //     {\n  //       setUsers(users);\n  //     }\n  //   } catch (error) {\n  //   }\n  // }\n\n  // useEffect(()=>{\n  //   getAllUsers();\n  // },[])\n\n  return (\n    <Layout>\n        <div className='container4'>\n          <div className='box4'>\n        <h1 className='text-center'>Host An Event</h1>\n        <form className='text-center'>\n          {/* <div className='mb-3'>\n          <Select bordered={false} placeholder=\"Select a user\" size='large' showSearch\n             className='form-select mb-3'\n             onChange={(value) =>setCategory(value)}>\n              {users?.map((c)=>(\n                <Option key={c._id} value={c._id}>{c.name}</Option>\n              ))}\n            </Select>\n          </div> */}\n          <div className=\"mb-3\">\n            <input type=\"text\" className=\"form-control\" id=\"exampleInputTitle1\"  value={title} placeholder='Enter title of the event'\n            onChange={(e) =>{\n              setTitle(e.target.value)\n            }}/>\n          </div>\n          <div className=\"mb-3\">\n            <input type=\"text\" className=\"form-control\" id=\"exampleInputDescription1\"  value={description} placeholder='Enter description of the event'\n            onChange={(e) =>{\n              setDescription(e.target.value)\n            }}/>\n          </div>\n          <div className=\"mb-3\">\n            <input type=\"text\" className=\"form-control\" id=\"exampleInputPlace1\"  value={place}placeholder='Enter place of the event'\n            onChange={(e) =>{\n              setPlace(e.target.value)\n            }}/>\n          </div>\n          <div className=\"mb-3\">\n            <input type=\"date\" className=\"form-control\" id=\"exampleInputDate1\"  value={date }placeholder='Enter date of the event'\n            onChange={(e) =>{\n              setDate(e.target.value)\n            }}/>\n          </div>\n          <div className=\"mb-3\">\n            <input type=\"text\" className=\"form-control\" id=\"exampleInputDate1\"  value={time }placeholder='Enter starting time of the event'\n            onChange={(e) =>{\n              setTime(e.target.value)\n            }}/>\n          </div>\n          <div className='mb-3'>\n          <button type=\"submit\" className=\"btn btn-primary col-md-3\" onClick={handleSubmit}>Submit</button>\n          </div>\n        </form>\n        </div>\n        </div>\n        <div className='container'>\n        <h1 className='text-center'>Host An Event</h1>\n        </div>\n    </Layout>\n  )\n}\n\nexport default HostAnEvent;","/home/akhil/Desktop/ecoverse/client/src/pages/EventDetails.js",["110","111","112","113","114"],[],"import React, { useEffect, useState } from 'react'\nimport Layout from '../components/Layout/Layout'\n// import toast from 'react-hot-toast'\nimport axios from 'axios'\nimport { NavLink, useParams } from 'react-router-dom'\n\nimport { useAuth } from '../Context/auth.js'\nimport  toast  from 'react-hot-toast'\nimport { useNavigate } from 'react-router-dom'\n\nconst EventDetails = () => {\n  \n  const params = useParams()\n  const navigate = useNavigate()\n  const [auth,setAuth] = useAuth()\n  const [host,setHost] = useState(0)\n  const [event,setEvent] = useState({\n    title:\"\",\n    description:\"\",\n    place:\"\",\n    date:\"\",\n    organiser:null\n  })\n  useEffect(  ()=>{\n    if(params?.title) getEvent();\n     \n   },[params?.title])\n \n  const getEvent = async() => {\n    try{\n\n      const {data} = await axios.get(`http://localhost:8080/api/v1/event/getOneEvent/${params.title}`)\n      if(data?.success)\n      {\n         toast.success('events were fetched')\n        setEvent(data?.event)\n        if(auth?.user._id === data?.event?.organiser)\n        {\n          setHost(1)\n        }\n      }\n      else\n      {\n       toast.error(data?.message)\n      }\n\n    }\n    catch(error)\n    {\n      toast.error(\"something went wrong\")\n    }\n  }\n  \n  const participate = async() =>{\n    try{\n      const dat = localStorage.getItem('auth')\n        const {data} = await axios.put(`http://localhost:8080/api/v1/auth/participate/${params.eid}`)\n\n        if(data?.success)\n        {\n          toast.success(data?.message)\n         // navigate('/yourparticipations');\n        }\n    }\n    catch(error)\n    {\n      toast.error(\"something went wrong\")\n    }\n  }\n \n  return (\n    <Layout>\n      <div className=\"container\" id=\"eventdetails\">\n        <h3 id=\"Event\">{event?.title}</h3>\n        <p><strong>Description : </strong>{event?.description}</p>\n        <hr></hr>\n        <p><strong>Address : </strong>{event?.place}</p>\n        <hr></hr>\n        <p><strong>Date : </strong>Date:{new Date(event?.date).getFullYear()}-{new Date(event?.date).getMonth()+1}-{new Date(event?.date).getDate()}</p>\n        <hr></hr>\n        <p><strong>Time: </strong>{event.time}</p>\n        {host===0 ?  <><p>Want to participate in the above event? Click below</p> <button className='btn btn-primary' onClick={() => participate()}>Participate</button></> : <h5>You are the host for this event</h5>} \n        </div>\n    </Layout>\n  )\n}\n\nexport default EventDetails","/home/akhil/Desktop/ecoverse/client/src/pages/OngoingEvents.js",["115","116","117"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport toast from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { NavLink, Navigate } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst OngoingEvents = () => {\n  const navigate = useNavigate();\n  const [events, setEvents] = useState([\n    {\n      title: \"\",\n      description: \"\",\n      place: \"\",\n      date: \"\",\n      organiser: null,\n    },\n  ]);\n\n  useEffect(() => {\n    getAllEvents();\n  }, []);\n\n  const getAllEvents = async () => {\n    try {\n      const { data } = await axios.get(\n        \"http://localhost:8080/api/v1/event/get-events\"\n      );\n      if (data?.success) {\n        toast.success(\"Events were fetched\");\n        setEvents(data?.events);\n      } else {\n        toast.error(data?.message);\n      }\n    } catch (error) {\n      toast.error(\"Something went wrong\");\n    }\n  };\n\n  return (\n    <Layout>\n      <h1 className=\"oe\">OngoingEvents</h1>\n      <div className=\"container\">\n      <div className=\"row justify-content-start\" >\n        {events.map((ev) => {\n            let cd = new Date().getTime();\n            let cd1 = new Date(ev.date);\n            if(cd <= cd1.getTime()){\n        return (\n          <div className=\"col-md-3 my-3\" key={ev._id}>\n            <div className=\"card\" style={{ width: \"18rem\" }}>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{ev.title}</h5>\n                <p className=\"card-text\">{ev.description}</p>\n                <button\n                  className=\"btn btn-primary ms-2\" id=\"submit\"\n                  onClick={() =>\n                    navigate(`/event-details/${ev.title}/${ev._id}`)\n                  }\n                >\n                  SEE DETAILS\n                </button>\n              </div>\n            </div>\n          </div>\n        )}})}\n      </div>\n</div>\n    </Layout>\n  );\n};\n\nexport default OngoingEvents;\n","/home/akhil/Desktop/ecoverse/client/src/Context/auth.js",["118"],[],"import {useState,useContext,createContext, useEffect} from 'react';\nimport axios from 'axios';\n\n\nconst AuthContext = createContext();\n\n\nconst AuthProvider = ({children}) =>{\n    const [auth,setAuth] = useState({\n        user:null,\n        token:\"\"\n    })\n    //default axios\n    //auth milta hai token ko fulfill karo\n    axios.defaults.headers.common['Authorization'] = auth?.token\n    useEffect(()=>{\n        const data = localStorage.getItem('auth');\n        if (data)\n        {\n            const parseData = JSON.parse(data);\n            setAuth({\n                ...auth,\n                user:parseData.user,\n                token:parseData.token\n            })\n        }\n        //eslint -disable next lines\n    },[])\n    return (\n        <AuthContext.Provider value={[auth,setAuth]}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n//custom hook\nconst useAuth = () => useContext(AuthContext)\n\nexport {useAuth,AuthProvider};","/home/akhil/Desktop/ecoverse/client/src/pages/YourEvents.js",["119","120"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport { useAuth } from \"../Context/auth\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport axios from \"axios\";\nconst YourEvents = () => {\n  const navigate = useNavigate();\n\n  const [auth] = useAuth();\n  const [events, setEvents] = useState();\n  const getYourEvents = async () => {\n    try {\n      const { data } = await axios.get(\n        \"http://localhost:8080/api/v1/event/get-hostedEvents\"\n      );\n      if (data?.success) {\n        setEvents(data?.events);\n      }\n    } catch (error) {\n    }\n  };\n  useEffect(() => {\n    getYourEvents();\n  }, []);\n\n  return (\n    <Layout>\n      <h2 id=\"yourevents\">Your Events</h2>\n      <div className=\"container\">\n      <div className=\"row justify-content-start\" >\n      {events?.map((ev) => {\n        let cd = new Date().getTime();\n        let cd1 = new Date(ev.date);\n        if (cd <= cd1.getTime()) {\n          return (\n            <>\n            <div className=\"col-md-3 my-3\" key={ev._id}>\n              <div className=\"card\" style={{ width: \"18rem\" }}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{ev.title}</h5>\n                  <p className=\"card-text\">{ev.description}</p>\n                  <p>Description:{ev.description}</p>\n                  <p>Address:{ev.place}</p>\n                  {\n                    <p>\n                      Date:{new Date(ev?.date).getFullYear()}-\n                      {new Date(ev?.date).getMonth() + 1}-\n                      {new Date(ev?.date).getDate()}\n                    </p>\n                  }\n                  <p>Time: {ev.time}</p>\n                  <button\n                    className=\"btn btn-primary ms-2\"\n                    onClick={() => {\n                      navigate(`/participantslist/${ev._id}`);\n                    }}\n                  >\n                    Get Paticpants list\n                  </button>\n                </div>\n              </div>\n              </div>\n            </>\n          );\n        }\n      })}\n      </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default YourEvents;\n","/home/akhil/Desktop/ecoverse/client/src/pages/ParticipantsList.js",["121"],[],"import React, { useState,useEffect } from 'react'\nimport Layout from '../components/Layout/Layout'\nimport axios from 'axios'\n\nimport { useParams } from 'react-router-dom'\n\nconst ParticipantsList = () => {\n\n    const params = useParams()\n    const [users,setUsers] = useState()\n    const getUsers = async() => {\n        try{\n            const {data} = await axios.get(`http://localhost:8080/api/v1/event/geteventusers/${params.eid}`);\n            if(data?.success)\n            {\n                setUsers(data?.eventusers)\n            }\n        }\n        catch(error)\n        {\n        }\n    }\n    useEffect(()=>{\n        getUsers();\n    },[])\n  return (\n    <Layout>\n        <h3>Paricpants List</h3>\n        <div className='border shadow'>\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Phone</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                            users?.map((u,i) => {\n                                return (\n                                    <tr>\n                                        <td>{i+1}</td>\n                                        <td>{u.name}</td>\n                                        <td>{u.email}</td>\n                                        <td>{u.phone}</td>\n                                    </tr>\n                                );\n                            })\n                        }\n                </tbody>\n            </table>\n\n        </div>\n        \n    </Layout>\n  )\n}\n\nexport default ParticipantsList",{"ruleId":"122","severity":1,"message":"123","line":10,"column":16,"nodeType":"124","messageId":"125","endLine":10,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":30,"column":6,"nodeType":"128","endLine":30,"endColumn":8,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"130","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":14,"column":15,"nodeType":"124","messageId":"125","endLine":14,"endColumn":22},{"ruleId":"122","severity":1,"message":"131","line":20,"column":9,"nodeType":"124","messageId":"125","endLine":20,"endColumn":11},{"ruleId":"122","severity":1,"message":"132","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":17},{"ruleId":"122","severity":1,"message":"133","line":14,"column":9,"nodeType":"124","messageId":"125","endLine":14,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":15,"column":15,"nodeType":"124","messageId":"125","endLine":15,"endColumn":22},{"ruleId":"126","severity":1,"message":"134","line":27,"column":6,"nodeType":"128","endLine":27,"endColumn":21,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":56,"column":13,"nodeType":"124","messageId":"125","endLine":56,"endColumn":16},{"ruleId":"122","severity":1,"message":"132","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":17},{"ruleId":"122","severity":1,"message":"137","line":5,"column":19,"nodeType":"124","messageId":"125","endLine":5,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":45,"column":26,"nodeType":"140","messageId":"141","endLine":45,"endColumn":28},{"ruleId":"126","severity":1,"message":"142","line":28,"column":7,"nodeType":"128","endLine":28,"endColumn":9,"suggestions":"143"},{"ruleId":"122","severity":1,"message":"144","line":11,"column":10,"nodeType":"124","messageId":"125","endLine":11,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":33,"column":25,"nodeType":"140","messageId":"141","endLine":33,"endColumn":27},{"ruleId":"126","severity":1,"message":"145","line":25,"column":7,"nodeType":"128","endLine":25,"endColumn":9,"suggestions":"146"},"no-unused-vars","'setAuth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPEvents'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'useEffect' is defined but never used.","'id' is assigned a value but never used.","'NavLink' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEvent'. Either include it or remove the dependency array.",["148"],"'dat' is assigned a value but never used.","'Navigate' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array. You can also do a functional update 'setAuth(a => ...)' if you only need 'auth' in the 'setAuth' call.",["149"],"'auth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["150"],{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [getPEvents]",{"range":"159","text":"160"},"Update the dependencies array to be: [getEvent, params?.title]",{"range":"161","text":"162"},"Update the dependencies array to be: [auth]",{"range":"163","text":"164"},"Update the dependencies array to be: [getUsers]",{"range":"165","text":"166"},[725,727],"[getPEvents]",[705,720],"[getEvent, params?.title]",[720,722],"[auth]",[638,640],"[getUsers]"]